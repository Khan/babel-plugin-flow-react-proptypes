// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MuiThemeProvider 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require(\\"react\\"));

var _propTypes = _interopRequireDefault(require(\\"prop-types\\"));

var _brcast = _interopRequireDefault(require(\\"brcast\\"));

var _themeListener = _interopRequireWildcard(require(\\"./themeListener\\"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\"value\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== \\"function\\" && superClass !== null) { throw new TypeError(\\"Super expression must either be null or a function\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var MuiThemeProvider =
/*#__PURE__*/
function (_React$Component) {
  _inherits(MuiThemeProvider, _React$Component);

  function MuiThemeProvider(props, context) {
    var _this;

    _classCallCheck(this, MuiThemeProvider);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MuiThemeProvider).call(this, props, context)); // Get the outer theme from the context, can be null

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \\"broadcast\\", (0, _brcast.default)());

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \\"unsubscribeId\\", null);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \\"outerTheme\\", null);

    _this.outerTheme = _themeListener.default.initial(context); // Propagate the theme so it can be accessed by the children

    _this.broadcast.setState(_this.mergeOuterLocalTheme(_this.props.theme));

    return _this;
  }

  _createClass(MuiThemeProvider, [{
    key: \\"getChildContext\\",
    value: function getChildContext() {
      if (this.props.sheetsManager) {
        var _ref;

        return _ref = {}, _defineProperty(_ref, _themeListener.CHANNEL, this.broadcast), _defineProperty(_ref, \\"sheetsManager\\", this.props.sheetsManager), _ref;
      }

      return _defineProperty({}, _themeListener.CHANNEL, this.broadcast);
    }
  }, {
    key: \\"componentDidMount\\",
    value: function componentDidMount() {
      var _this2 = this;

      // Subscribe on the outer theme, if present
      this.unsubscribeId = _themeListener.default.subscribe(this.context, function (outerTheme) {
        _this2.outerTheme = outerTheme; // Forward the parent theme update to the children

        _this2.broadcast.setState(_this2.mergeOuterLocalTheme(_this2.props.theme));
      });
    }
  }, {
    key: \\"componentWillReceiveProps\\",
    value: function componentWillReceiveProps(nextProps) {
      // Propagate a local theme update
      if (this.props.theme !== nextProps.theme) {
        this.broadcast.setState(this.mergeOuterLocalTheme(nextProps.theme));
      }
    }
  }, {
    key: \\"componentWillUnmount\\",
    value: function componentWillUnmount() {
      if (this.unsubscribeId !== null) {
        _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
      }
    }
  }, {
    key: \\"mergeOuterLocalTheme\\",
    // Simple merge between the outer theme and the local theme
    value: function mergeOuterLocalTheme(localTheme) {
      // To support composition of theme.
      if (typeof localTheme === 'function') {
        return localTheme(this.outerTheme);
      }

      if (!this.outerTheme) {
        return localTheme;
      }

      return _objectSpread({}, this.outerTheme, localTheme);
    }
  }, {
    key: \\"render\\",
    value: function render() {
      return this.props.children;
    }
  }]);

  return MuiThemeProvider;
}(_react.default.Component);

MuiThemeProvider.propTypes = {
  /**
   * You can only provide a single element.
   */
  children: _propTypes.default.element.isRequired,

  /**
   * The sheetsManager is used in order to only inject once a style sheet in a page for
   * a given theme object.
   * You should provide on the server.
   */
  sheetsManager: _propTypes.default.object,

  /**
   * A theme object.
   */
  theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]).isRequired
};
MuiThemeProvider.childContextTypes = _objectSpread({}, _themeListener.default.contextTypes, {
  sheetsManager: _propTypes.default.object
});
MuiThemeProvider.contextTypes = _themeListener.default.contextTypes;
var _default = MuiThemeProvider;
exports.default = _default;"
`;
