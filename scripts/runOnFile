#!/usr/bin/env ./node_modules/.bin/babel-node

const fs = require('fs');
const babel = require('babel-core');

const self = process.argv.includes('--lib')
  ? require('../lib/index.js')
  : require('../src/index.js');

let babelConfig = null;

if (process.argv.includes('--rn')) {
  console.error(`Running with react-native`);
  const selfConf = [self, { useStatic: true }];


  babelConfig = {
    babelrc: false,
    presets: ['react-native/configs/hmr.js'],
    plugins: ['@babel/syntax-flow', selfConf],
  };
/*  babelConfig = {
    babelrc: false,
    presets: [
      'react-native/configs/hmr.js',
      { plugins: [ selfConf ] },
    ],
    plugins: ['@babel/syntax-flow'],
  };
*/

}
else {
  const selfConfig = {};

  if (process.argv.includes('--dead')) {
    selfConfig.deadCode = true;
  }
  console.error(`Running in default config`);
  babelConfig = {
    babelrc: false,
    presets: ['@babel/env', '@babel/react', '@babel/flow'],
    plugins: ['@babel/syntax-flow', [self, selfConfig]],
  };
}

if (process.argv.includes('--leave-esm')) {
  babelConfig.presets.splice(babelConfig.presets.indexOf('env'), 1);
}

const input = fs.readFileSync(process.argv[2], 'utf-8');
const res = babel.transform(input, babelConfig).code;
console.log(res);
